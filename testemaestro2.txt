sub fn1()
  {se verdadeiro {$variavel := $xpto;}}
sub fn1($X)
  {se verdadeiro {$variavel := $xpto;}}
sub fn1($X,$Y)
  {se verdadeiro {$variavel := $xpto;}}

sub fn1()
  {}
sub fn1($X)
  {}
sub fn1($X,$Y)
  {}

sub fn1($X,$Y)
  {repetir 10 {$variavel := xpto;}}
sub fn1($X,$Y)
  {variavel;}

sub fn1($X,$Y)
  {retornar ;}

sub fn1($X,$Y)
  {callEmpty;}
sub fn1($X,$Y)
  {call1Exp "exp";}
sub fn1($X,$Y)
  {call2Exp "exp1" @inicializado;}
sub fn1($X,$Y)
  {call3Exp "exp1" @inicializado verdadeiro;}

sub fn1($X,$Y)
  {teste @inicializado;
	teste @suspenso;
	teste @executando;
	teste @finalizado;
	teste "cadeia";
	teste [testeCall];
	teste verdadeiro;
	teste falso;
	testeExpVazia;}

/*
TESTES OK

  MAESTRO : SUB_DEF MAESTRO (print "SUB_DEF MAESTRO\n")
	  |	(print "MAESTRO VAZIO\n")
  SUB_DEF	: SUB2 ID PAREN_E LIST_PARAM_DEF PAREN_D BLOCO	 (print "SUB_DEF\n")
  LIST_PARAM_DEF: VAR VIRGULA LIST_PARAM_DEF	(print "LIST_PARAM_DEF\n"; print VAR; print "\n")
		| VAR				(print "LIST_PARAM_DEF VAR\n";print VAR; print "\n")
		| 				(print "LIST_PARAM_DEF VAZIO\n")
  BLOCO		: CHAVE_E LIST_CMD CHAVE_D	(print "BLOCO \n")
  LIST_CMD	: CMD LIST_CMD	(print "LIST_CMD CMD \n")
		| 		(print "LIST_CMD VAZIO\n")

  CMD  	: FLUX_SE EXPR BLOCO	(print "CMD FLUX_SE\n")
		| FLUX_REP NUM BLOCO	(print "CMD FLUX_REP\n")
		| VAR ATRIB CALL 	(print "CMD ATRIB CALL\n")
		| VAR ATRIB VAR	SEMI	(print "CMD ATRIB VAR\n")
		| CALL			(print "CMD CALL\n")
		| FLUX_RET EXPR SEMI	(print "CMD FLUX_RET\n")

  CALL	:ID LIST_EXPR SEMI(print "CALL \n")

  LIST_EXPR : EXPR LIST_EXPR	(print "LIST_EXPR \n")
	| 			(print "LIST_EXPR VAZIO \n")

  EXPR	: EST_INI  (print "inicial\n")
	| EST_SUS  (print ("suspenso\n") )
	| EST_EXE  (print ("exec\n") )
	| EST_FIN  (print ("fin\n") )
	| CADEIA  (print ("cadeia\n");print (CADEIA);print ("\n") )
	| COLCH_E CALL COLCH_D  (print ("[");print ("entrou no CALL");print ("]");
					print ("\n") )
	| BOOL_V  (print ("verdadeiro\n") )
	| BOOL_F  (print ("falso\n") )

        | (print "EXPR VAZIO\n")

*/
